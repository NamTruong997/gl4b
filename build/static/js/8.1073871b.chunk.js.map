{"version":3,"sources":["libs/utils/useIntersection.ts","libs/lazy-load/LazyImage.tsx","components/base/introduce/Introduce.tsx","components/base/value/Value.tsx","components/base/offer/itemMain/ItemMain.tsx","components/views/offer/OfferPage.tsx"],"names":["useIntersection","ref","options","useState","entry","setEntry","once","root","rootMargin","threshold","useEffect","node","document","querySelector","current","window","IntersectionObserver","observer","entries","isIntersecting","disconnect","observe","inview","LazyImage","React","forwardRef","props","className","src","preview","loadType","load","onLoaded","onLoadProp","id","others","viewRef","useRef","lazyload","useLazyImage","loading","imgsrc","cloneElement","img","alt","style","transition","filter","transform","onLoad","imgSource","executing","setLoading","loaded","Image","onload","WOW","require","Introduce","live","init","renderHTML","data","useLocalize","visual","ishomepage","mimeType","includes","url","loop","autoPlay","muted","logo","label","intro","data-wow-delay","quote","scrollable","scroll","Value","useWindowSize","width","render","setRender","settings","dots","customPaging","href","infinite","speed","slidesToShow","isMobile","figures","length","slidesToScroll","slideScroll","centerMode","undefined","centerPadding","arrows","trackScrolling","wrappedElement","getElementById","isBottom","removeEventListener","el","getBoundingClientRect","bottom","innerHeight","addEventListener","map","slide","index","value","str","number","match","x","indexNumber","indexOf","key","image","test","slice","end","parseFloat","duration","separator","decimal","decimals","Math","floor","toString","split","generate","button","to","discover","text","ItemMain","isHaveColor","title","type","controls","content","action","link","OfferPage","useLocalizePage","offers","Helmet","charSet","name","rel","arrLink","item","description","actionName","renderList"],"mappings":"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","file":"static/js/8.1073871b.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ntype UseIntersectionProps = {\r\n  once?: boolean;\r\n};\r\ntype UseIntersectionType = IntersectionObserverInit & UseIntersectionProps;\r\n\r\nconst useIntersection = (ref: React.RefObject<HTMLElement> | string | null, options?: UseIntersectionType) => {\r\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\r\n  const { once, root, rootMargin, threshold } = options || {};\r\n\r\n  useEffect(() => {\r\n    const node = typeof ref == \"string\" ? document.querySelector(ref) : ref?.current;\r\n    if (node && window.IntersectionObserver) {\r\n      const handleIntersection = (entries: IntersectionObserverEntry[]) => {\r\n        setEntry(entries[0]);\r\n        once && entries[0].isIntersecting && observer.disconnect();\r\n      };\r\n\r\n      const observer = new window.IntersectionObserver(handleIntersection, {\r\n        root: root,\r\n        rootMargin: rootMargin,\r\n        threshold: threshold,\r\n      });\r\n      observer.observe(node);\r\n\r\n      return () => observer.disconnect();\r\n    }\r\n  }, [ref, once, root, rootMargin, threshold]);\r\n\r\n  return { inview: entry?.isIntersecting ? true : false, entry };\r\n};\r\n\r\nexport default useIntersection;\r\n","import useIntersection from \"libs/utils/useIntersection\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { LazyType } from \"./LazyLoad\";\r\nimport \"./LazyLoad.scss\";\r\n\r\nexport interface LazyImageProps {\r\n  className?: string;\r\n  preview?: JSX.Element;\r\n  alt?: string;\r\n  src: string;\r\n  loadType?: LazyType;\r\n  load?: boolean;\r\n  id?: string;\r\n  onLoadProp?: () => void;\r\n  onLoaded?: () => void;\r\n}\r\nconst LazyImage = React.forwardRef<any, React.PropsWithChildren<LazyImageProps> & React.DOMAttributes<HTMLImageElement>>((props, ref) => {\r\n  let { className, preview, src, loadType, load, onLoaded, onLoadProp, id, ...others } = props;\r\n  loadType = loadType || \"inview\"; // default props\r\n\r\n  const viewRef = useRef<HTMLImageElement | null>(null);\r\n  const { inview } = useIntersection(loadType === \"inview\" ? viewRef : null, { once: true });\r\n\r\n  let lazyload = true;\r\n  if (loadType === \"inview\") lazyload = inview;\r\n  else if (loadType === \"manual\") lazyload = load || false;\r\n\r\n  const { loading, src: imgsrc } = useLazyImage(src, lazyload);\r\n\r\n  useEffect(() => {\r\n    if (!loading) onLoaded?.();\r\n  }, [loading, onLoaded]);\r\n\r\n  const styles = () => {\r\n    return {\r\n      transition: \"filter 0.5s linear\",\r\n      filter: `${loading ? \"blur(30px)\" : \"\"}`,\r\n      transform: `${loading ? \"scale(1.1)\" : \"\"}`,\r\n    };\r\n  };\r\n\r\n  return loading && props.preview ? (\r\n    React.cloneElement(props.preview, {\r\n      className: className,\r\n      ref: viewRef,\r\n    })\r\n  ) : (\r\n      <img\r\n        ref={(img) => {\r\n          viewRef.current = img;\r\n          ref && (typeof ref === \"function\" ? ref(img) : (ref.current = img));\r\n        }}\r\n        className={`lazy-image ${className || \"\"} lazy-image--${loading ? \"loading\" : \"loaded\"}`}\r\n        src={imgsrc}\r\n        alt={props.alt}\r\n        style={styles()}\r\n        id={id}\r\n        onLoad={onLoadProp}\r\n        {...others}\r\n      />\r\n    );\r\n});\r\n\r\nexport default LazyImage;\r\n\r\nconst useLazyImage = (imgSource: string, executing: boolean = true) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const loaded = useRef(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loaded.current = false;\r\n  }, [imgSource]);\r\n\r\n  executing = executing && !loaded.current;\r\n  useEffect(() => {\r\n    if (executing) {\r\n      setLoading(true);\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        loaded.current = true;\r\n        setLoading(false);\r\n      };\r\n      img.src = imgSource;\r\n\r\n      return () => {\r\n        img.onload = null;\r\n      };\r\n    }\r\n  }, [imgSource, executing]);\r\n  const src = !executing && !loaded.current ? \"\" : imgSource;\r\n  return { src, loading };\r\n};\r\n\r\nexport { useLazyImage };\r\n\r\n","import LazyImage from \"libs/lazy-load/LazyImage\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useLocalize } from \"store/actions/localizeAction\";\r\nimport \"./Introduce.scss\";\r\nconst WOW = require(\"wowjs\");\r\n\r\nexport interface IntroduceDataType {\r\n  label: {\r\n    intro: string;\r\n    quote: string;\r\n    scroll: string;\r\n  };\r\n  visual: {\r\n    mimeType: string;\r\n    url: string;\r\n  };\r\n  logo: {\r\n    mimeType: string;\r\n    url: string;\r\n  };\r\n}\r\nexport interface IntroduceProps {\r\n  scrollable?: any;\r\n  ishomepage?: any;\r\n}\r\n\r\nconst Introduce: React.FC<IntroduceProps> = (props) => {\r\n  useEffect(() => {\r\n    const wow = new WOW.WOW({\r\n      live: false,\r\n    });\r\n    wow.init();\r\n  }, []);\r\n  const renderHTML = require(\"react-render-html\");\r\n  const data = useLocalize<IntroduceDataType>(\"intro\");\r\n\r\n  const renderNotHomepage = () => {\r\n    if (data.visual.mimeType.includes(\"video\")) {\r\n      return <video src={data.visual.url} loop autoPlay={true} muted></video>;\r\n    } else {\r\n      return <LazyImage className=\"img-bg\" src={data.visual.url} alt=\"\" />;\r\n    }\r\n  };\r\n\r\n  const renderHomepage = () => {\r\n    if (data.visual.mimeType.includes(\"video\")) {\r\n      return <video src={data.visual.url} loop autoPlay={true} muted></video>;\r\n    } else {\r\n      return <div className=\"div-bg\" >\r\n        <LazyImage className=\"lazaImg-abs\" src={data.visual.url}></LazyImage>\r\n      </div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"com-introduce \" id=\"introduce\" {...props}>\r\n      <div className=\"wrapper-video\">\r\n        {data?.visual && (props.ishomepage === \"true\" ? renderHomepage() : renderNotHomepage())}\r\n        {/* {props.ishomepage && data?.logo && <img className=\"logo\" src={data.logo.url} alt=\"logoIntro\" />} */}\r\n      </div>\r\n\r\n      <div className=\"wrapper-content\">\r\n        {props.ishomepage === \"true\" && data?.logo && <LazyImage src={data.logo.url} alt=\"logo\" />}\r\n\r\n        <div className={`${props.ishomepage === \"true\" ? \"\" : \"top\"} block-content`}>\r\n          <div className=\"first-content \">\r\n            <h2 className=\"title wow fadeInUp\">{data?.label.intro}</h2>\r\n            <div className=\"content wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              {data?.label.quote && renderHTML(data.label.quote)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {props.scrollable === \"true\" && (\r\n        <div className=\"block-scroll1\">\r\n          <div className=\"hr-scroll\"></div>\r\n          <div className=\"bounceScroll\">{data?.label.scroll}</div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Introduce;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport CountUp from \"react-countup\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport useWindowSize from \"utils/resizeViewport\";\r\nimport \"./Value.scss\";\r\nimport { useLocalize } from \"store/actions/localizeAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LabelDataType } from \"../strength/Strength\";\r\nimport LazyImage from \"libs/lazy-load/LazyImage\";\r\nexport interface ValueProps {\r\n  isMobile?: boolean;\r\n  slideScroll?: number;\r\n  keyData?: string;\r\n  mode?: string;\r\n}\r\nexport interface ValueDataType {\r\n  button: {\r\n    discover: {\r\n      text: string;\r\n      href: string;\r\n    };\r\n  };\r\n  label: LabelDataType;\r\n  figures: [\r\n    {\r\n      image: {\r\n        url: string;\r\n      };\r\n      quote: string;\r\n      value: string;\r\n    }\r\n  ];\r\n}\r\nconst Value: React.FC<ValueProps> = (props) => {\r\n  const [width] = useWindowSize();\r\n  const data = useLocalize<ValueDataType>(\"values\");\r\n\r\n  //True - mobile\r\n  const checkSizeDevice = () => {\r\n    return width < 769;\r\n  };\r\n  const [render, setRender] = useState(false);\r\n  const checkLength = () => {\r\n    if (data) {\r\n      return data.figures.length > 2 ? 3 : 2;\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  const settings = {\r\n    dots: true,\r\n    customPaging: () => {\r\n      return (\r\n        <a href=\"#section\">\r\n          <div className=\"com-value-dots\"></div>\r\n        </a>\r\n      );\r\n    },\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: props.isMobile ? 1 : checkSizeDevice() ? 1 : checkLength(),\r\n    slidesToScroll: props.slideScroll || 1,\r\n    centerMode: props.slideScroll === undefined && true,\r\n    centerPadding: \"0px\",\r\n    arrows: false,\r\n  };\r\n\r\n  const trackScrolling = () => {\r\n    const wrappedElement = document.getElementById(\"introduce\") || document.getElementById(\"bestcase-detail\");\r\n    if (wrappedElement !== null && isBottom(wrappedElement)) {\r\n      setRender(true);\r\n      document.removeEventListener(\"scroll\", trackScrolling);\r\n    }\r\n  };\r\n\r\n  const isBottom = (el: HTMLElement) => {\r\n    return el.getBoundingClientRect().bottom <= window.innerHeight / 1.25;\r\n  };\r\n\r\n  const countDecimals = (value: any) => {\r\n    if (value && Math.floor(value) !== value) return value.toString().split(\".\")[1].length || 0;\r\n    return 0;\r\n  };\r\n\r\n  const generate = () => {\r\n    if (data) {\r\n      return data.figures.map((slide, index) => {\r\n        let str = slide.value;\r\n        let myRegexp = /\\d*\\.?\\d*/gm;\r\n        let number = str.match(myRegexp)?.filter((x) => x !== \"\")[0] || \"\";\r\n        let indexNumber = str.indexOf(number!);\r\n\r\n        return (\r\n          <div className=\"item\" key={index}>\r\n            <div className=\"wrapper-img\">\r\n              <LazyImage src={slide.image.url} alt=\"icon-slider\"></LazyImage>\r\n            </div>\r\n            {/\\d*\\.?\\d*/gm.test(str) ? (\r\n              <div className=\"titleBig  title\">\r\n                {str.slice(0, indexNumber)}\r\n                <CountUp end={parseFloat(number)} duration={3} separator=\"\" decimal=\".\" decimals={countDecimals(parseFloat(number))}></CountUp>\r\n                {str.slice(indexNumber + number.length)}\r\n              </div>\r\n            ) : (\r\n                <div className=\"titleBig spec title\">{slide.value}</div>\r\n              )}\r\n            <div className=\"content\">{slide.quote}</div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", trackScrolling);\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", trackScrolling);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"com-value\">\r\n      {render && (\r\n        <Slider className=\"block-item\" {...settings}>\r\n          {generate()}\r\n        </Slider>\r\n      )}\r\n\r\n      {/* Button who we are page */}\r\n      {data?.button && (\r\n        <div className=\"wrapper-btnOffer\">\r\n          <Link className=\"btn-offer\" to=\"/offer\">\r\n            <div>{data?.button.discover.text}</div>\r\n          </Link>\r\n          <Link className=\"btn-offer-desk\" to=\"/offer\">\r\n            <div>{data?.button.discover.text}</div>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Value;\r\n","import React from \"react\";\r\nimport \"./ItemMain.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n  img: any;\r\n  title: string;\r\n  content: string;\r\n  isHaveColor: boolean;\r\n  index: number;\r\n  action?: string;\r\n  type?: string;\r\n  url?: string;\r\n  link?: string;\r\n}\r\n\r\nconst renderHTML = require(\"react-render-html\");\r\n\r\nconst ItemMain: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className=\"com-itemMain\">\r\n      <div className={`${props.isHaveColor ? \"color\" : \"\"} block-top`}>\r\n        <div className=\"block-title\">\r\n          <div className=\"title\">{props.title}</div>\r\n        </div>\r\n        {props.type && !props.type.includes(\"video\") && <img src={props.img} alt=\"item-offer\" />}\r\n        {props.type && props.type.includes(\"video\") && (\r\n          <video loop controls>\r\n            <source src={props.img} type={props.type} />\r\n          </video>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"wrapper-content\">\r\n        <div className=\"content\">{renderHTML(props.content)}</div>\r\n        {props.action !== undefined && !props.action.includes(\"http\") && (\r\n          <Link className=\"btn-item-offer hidden opa-0\" to={`/offer/${props.link}`}>\r\n            {props.action}\r\n          </Link>\r\n        )}\r\n        {props.action !== undefined && props.action.includes(\"http\") && <a href={props.url}>{props.action}</a>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemMain;\r\n","import React from \"react\";\r\nimport Introduce from \"components/base/introduce/Introduce\";\r\nimport \"./OfferPage.scss\";\r\n\r\nimport ItemMain from \"components/base/offer/itemMain/ItemMain\";\r\nimport Value from \"components/base/value/Value\";\r\nimport { useLocalizePage, useLocalize } from \"store/actions/localizeAction\";\r\nimport { Helmet } from \"react-helmet\";\r\nexport interface OffferDataType {\r\n  visual: {\r\n    mimeType: string;\r\n    url: string;\r\n  };\r\n  link: string;\r\n  title: string;\r\n  description: string;\r\n  actionName: string;\r\n}\r\n\r\nconst OfferPage: React.FC = () => {\r\n  useLocalizePage(\"offer\", \"/api/page/en/offers\");\r\n  const offers = useLocalize<OffferDataType[]>(\"offers\");\r\n\r\n  const renderList = () => {\r\n    const arrLink = [\"advertising-solutions\", \"gamification-services\", \"partnerships-esports\"];\r\n    return offers?.map((item: OffferDataType, index: number) => {\r\n      return (\r\n        <ItemMain\r\n          isHaveColor={index % 2 === 0}\r\n          key={index}\r\n          index={index + 1}\r\n          title={item.title}\r\n          content={item.description}\r\n          action={item.actionName}\r\n          img={item.visual.url}\r\n          type={item.visual.mimeType}\r\n          link={arrLink[index]}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"com-offer\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Gaming Development and Services Offered | Gameloft</title>\r\n        <meta name=\"description\" content=\"We offer outstanding services and gaming development solutions to grow your business in the competitive arena.\" />\r\n        <link rel=\"canonical\" href=\"https://www.gameloft.com/forbrands/offer\" />\r\n      </Helmet>\r\n      <Introduce scrollable=\"true\"></Introduce>\r\n      <Value />\r\n      {renderList()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfferPage;\r\n"],"sourceRoot":""}