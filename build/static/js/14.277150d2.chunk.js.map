{"version":3,"sources":["components/base/brand/Brand.tsx"],"names":["Brand","useWindowSize","width","data","useLocalize","settings","dots","customPaging","href","className","infinite","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","arrows","renderBrand","arr","index","length","slice","map","item","src","image","url","alt","key","label","intro","brands","push","renderSlider"],"mappings":"wNAgFeA,UA7DS,WAEtB,IAF4B,EAGZC,cAATC,EAHqB,oBAItBC,EAAOC,YAA2B,UAKlCC,EAAW,CACfC,MAAM,EACNC,aAAc,WACZ,OACE,uBAAGC,KAAK,YACN,yBAAKC,UAAU,qBAIrBC,UAAU,EACVC,MAAO,IACPC,aAdOV,EAAQ,IAcmB,EAAI,EACtCW,eAAgB,EAChBC,YAAY,EACZC,cAAe,MACfC,QAAQ,GAgBJC,EAAc,SAACC,EAAqBC,EAAeC,GAGvD,OAFgBF,EAAIG,MAAMF,EAAQC,EAAQD,EAAQC,EAASA,GAE1CE,KAAI,SAACC,EAAoBJ,GACxC,OAAO,kBAAC,IAAD,CAAWK,IAAKD,EAAKE,MAAMC,IAAKC,IAAI,OAAOC,IAAKT,QAI3D,OACE,yBAAKV,UAAU,aACb,yBAAKA,UAAU,SAAf,OAAwBN,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAM0B,MAAMC,QAE9B,OAAJ3B,QAAI,IAAJA,OAAA,EAAAA,EAAM4B,SAAU,kBAAC,IAAD,eAAQtB,UAAU,cAAiBJ,GAzBpC,WAEnB,IADA,IAAIa,EAAM,GACDC,EAAQ,EAAGA,EA3BJ,EA2BuBA,IACrCD,EAAIc,KACF,yBAAKvB,UAAU,OAAOmB,IAAKT,GACxBF,EAAW,OAACd,QAAD,IAACA,OAAD,EAACA,EAAM4B,OAAQZ,GAAW,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAM4B,OAAOX,QAAS,KAK9D,OAAOF,EAAII,KAAI,SAACC,GAAD,OAAUA,KAgBlBU,O","file":"static/js/14.277150d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport useWindowSize from \"utils/resizeViewport\";\r\nimport \"./Brand.scss\";\r\nimport { useLocalize } from \"store/actions/localizeAction\";\r\nimport LazyImage from \"libs/lazy-load/LazyImage\";\r\nexport interface LogoDataType {\r\n  image: {\r\n    url: string;\r\n  };\r\n  name: string;\r\n}\r\nexport interface BrandDataType {\r\n  label: {\r\n    intro: string;\r\n  };\r\n  brands: LogoDataType[];\r\n}\r\n\r\nconst Brand: React.FC = () => {\r\n  // Page of slider show on mobile\r\n  const PAGE_SIZE = 2;\r\n  const [width] = useWindowSize();\r\n  const data = useLocalize<BrandDataType>(\"brands\");\r\n  const checkSizeDevice = () => {\r\n    return width < 768;\r\n  };\r\n\r\n  const settings = {\r\n    dots: true,\r\n    customPaging: () => {\r\n      return (\r\n        <a href=\"#section\">\r\n          <div className=\"com-value-dots\"></div>\r\n        </a>\r\n      );\r\n    },\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: checkSizeDevice() ? 1 : 2,\r\n    slidesToScroll: 1,\r\n    centerMode: true,\r\n    centerPadding: \"0px\",\r\n    arrows: false,\r\n  };\r\n\r\n  const renderSlider = () => {\r\n    let arr = [];\r\n    for (let index = 0; index < PAGE_SIZE; index++) {\r\n      arr.push(\r\n        <div className=\"item\" key={index}>\r\n          {renderBrand(data?.brands, index, data?.brands.length / 2)}\r\n        </div>\r\n      );\r\n    }\r\n    // Render\r\n    return arr.map((item) => item);\r\n  };\r\n\r\n  const renderBrand = (arr: LogoDataType[], index: number, length: number) => {\r\n    let arrActive = arr.slice(index * length, index * length + length);\r\n\r\n    return arrActive.map((item: LogoDataType, index) => {\r\n      return <LazyImage src={item.image.url} alt=\"logo\" key={index} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"com-brand\">\r\n      <div className=\"title\">{data?.label.intro}</div>\r\n      {\r\n        data?.brands && <Slider className=\"block-item\" {...settings}>\r\n          {renderSlider()}\r\n        </Slider>\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n"],"sourceRoot":""}