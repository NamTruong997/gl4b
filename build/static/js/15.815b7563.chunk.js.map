{"version":3,"sources":["components/base/ourgame/OurGame.tsx"],"names":["OurGame","useWindowSize","width","data","useLocalize","settings","dots","customPaging","href","className","infinite","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","arrows","label","intro","games","map","item","index","title","key","src","image","url","alt","button","target","rel","discover","text"],"mappings":"wNAkFeA,UAzDW,WAAO,IAAD,EACdC,cAATC,EADuB,oBAMxBC,EAAOC,YAA6B,YAEpCC,EAAW,CACfC,MAAM,EACNC,aAAc,WACZ,OACE,uBAAGC,KAAK,YACN,yBAAKC,UAAU,qBAIrBC,UAAU,EACVC,MAAO,IACPC,aAfOV,EAAQ,KAemB,EAAI,EACtCW,eAAgB,EAChBC,YAAY,EACZC,cAAe,MACfC,QAAQ,GAgBV,OACE,yBAAKP,UAAU,eACb,yBAAKA,UAAU,SAAf,OAAwBN,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMc,MAAMC,QAE9B,OAAJf,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,QAAS,kBAAC,IAAD,eAAQV,UAAU,cAAiBJ,GAhB/CF,EAAKgB,MAAMC,KAAI,SAACC,EAAyBC,GAC9C,OACE,yBAAKb,UAAS,eAAyB,oBAAfY,EAAKE,MAA8B,OAAS,IAAMC,IAAKF,GAC7E,gCACE,kBAAC,IAAD,CAAWG,IAAKJ,EAAKK,MAAMC,IAAKC,IAAI,UACpC,oCAAaP,EAAKE,cAgBnB,OAAJpB,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,SACL,uBAAGrB,KAAK,oCAAoCsB,OAAO,SAASC,IAAI,uBAC9D,yBAAKtB,UAAU,eAAeN,EAAK0B,OAAOG,SAASC,U","file":"static/js/15.815b7563.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport useWindowSize from \"utils/resizeViewport\";\r\nimport \"./OurGame.scss\";\r\nimport { useLocalize } from \"store/actions/localizeAction\";\r\nimport LazyImage from \"libs/lazy-load/LazyImage\";\r\nexport interface GameImageDataType {\r\n  title: string;\r\n  image: {\r\n    url: string;\r\n  };\r\n}\r\n\r\nexport interface OurGameDataType {\r\n  label: {\r\n    intro: string;\r\n  };\r\n  games: GameImageDataType[];\r\n  button: {\r\n    discover: {\r\n      text: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst OurGame: React.FC = () => {\r\n  const [width] = useWindowSize();\r\n  //True - mobile\r\n  const checkSizeDevice = () => {\r\n    return width < 1280;\r\n  };\r\n  const data = useLocalize<OurGameDataType>(\"ourgames\");\r\n\r\n  const settings = {\r\n    dots: true,\r\n    customPaging: () => {\r\n      return (\r\n        <a href=\"#section\">\r\n          <div className=\"com-value-dots\"></div>\r\n        </a>\r\n      );\r\n    },\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: checkSizeDevice() ? 1 : 4,\r\n    slidesToScroll: 1,\r\n    centerMode: true,\r\n    centerPadding: \"0px\",\r\n    arrows: false,\r\n  };\r\n\r\n  const renderGame = () => {\r\n    return data.games.map((item: GameImageDataType, index) => {\r\n      return (\r\n        <div className={`item ${item.title === \"Despicable Me 2\" ? \"left\" : \"\"}`} key={index}>\r\n          <figure>\r\n            <LazyImage src={item.image.url} alt=\"games\" />\r\n            <figcaption>{item.title}</figcaption>\r\n          </figure>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"com-ourgame\">\r\n      <div className=\"title\">{data?.label.intro}</div>\r\n      {\r\n        data?.games && <Slider className=\"block-item\" {...settings}>\r\n          {renderGame()}\r\n        </Slider>\r\n      }\r\n\r\n      {data?.button && (\r\n        <a href=\"https://www.gameloft.com/en/games\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <div className=\"btn-ourgame\">{data.button.discover.text}</div>\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OurGame;\r\n"],"sourceRoot":""}